name: Build
on:
  push:
    tags:
      - "v*"

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--verbose --target x86_64-apple-darwin'
          - platform: 'ubuntu-latest'
            args: '--verbose'
          - platform: 'windows-latest'
            args: '--verbose'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: install Rust
        uses: dtolnay/rust-toolchain@1.76
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache tauri build
        uses: actions/cache@v3
        with:
          path: ./src-tauri/target
          key: ${{ runner.os }}-tauri-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: install app dependencies and build it
        run: yarn && yarn build

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          args: ${{ matrix.args }}
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
